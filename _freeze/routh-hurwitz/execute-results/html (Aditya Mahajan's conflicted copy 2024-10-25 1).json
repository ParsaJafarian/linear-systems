{
  "hash": "9f2e4dbcdf2711661d68e6c3c15e95b6",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Routh-Hurwitz Stability Criterion\n\nexecute:\n  echo: false\n  freeze: true\n  cache: true\n\nformat:\n  html:\n    html-table-processing: none\n---\n\nConsider a unity feedback system as shown in @fig-feedback. In such a setting, we are often interested in finding the values of $K$ for which the system is stable. \n\n![Block diagram of a proportional controller](figures/svg/routh-hurwitz1.svg){#fig-feedback}\n\n\n\n:::{#exm-PI}\nConsider the system shown in @fig-feedback with\n$$ G(s) = \\frac{1}{s-1}. $$\nFind the values of $K$ for which the system is stable. \n:::\n\n:::{.callout-note collapse=\"false\"} \n#### Solution\n\nThe closed-loop transfer function is given by\n$$ T(s) = \\frac{K G(s)}{1 + K G(s) } = \\frac{K}{s - 1 + K}. $$\nThus, the closed-loop transfer function has a pole at $1 - K$. The system is stable when all poles are in the OLHP, i.e., $1 - K < 0$. Thus, the system is stable for \n$$ K > 1. $$\n:::\n\nIn the above example, we could identify the roots of the closed loop transfer function and thereby determine the values of gain $K$ for which the system is stable. However, we can only factorize lower order polynomials; for polynomials with degree greater than $t$, we need to resort to numerical methods. Doing so, makes it difficult to find the range of values of $K$ for which a polynomial is stable. \n\nHowever, for determine the stability of a system, we don't need to find the roots of the denominator polynomial; we simply need to verify that all the roots are in the OLHP. The following result shows that we can determine if roots lie in the ORHP without factorizing a polynomial. \n\n:::{#thm-factorize}\nA necessary condition for a polynomial to be stable is that all the coefficients have the same sign (positive or negative)\n:::\n\nBut this is a necessary condition but not a sufficient condition. So, we know that the polynomial\n$$ D(s) = s^5 + 4 s^4 + 10s^3 - s^2 + 2 s + 1$$\nis unstable because one of the coefficients are negative. Moreover, we know that the polynomail\n$$ D(s) = s^4 + 4s^3 + s + 1$$\nis unstable because the coefficient of the $s^2$ term is $0$. But this necessary condition doesn't tell us if \n$$ D(s) = s^5 + 4 s^4 + 10s^3 + s^2 + 2 s + 1$$ \nis stable or not.\n\nThe Routh-Hurwitz criterion is a simple algebraic procedure which determines whether a polynomial is stable. The first step is generating what is called a Routh Array. \n\n\n## Generating the Routh Array\n\nConsider a polynomial \n$$ D(s) = a_n s^n + \\cdots + a_0. $$\n\nThe Routh array is a (non-rectangular) array with $n+1$ rows, indexed by $s^n$, $s^{n-1}$, $\\dots$, $s^0$. \n\n- **Step 1.** Fill the first two rows of the Routh array with the coefficients of $D(s)$ going in the zigzag pattern as shown below. We stop when we have used all the coefficients. Any unfilled entries in the Routh array are assumed to be zero. \n\n    <!-- TODO: Add figure -->\n\n- **Step 2.** This is a recursive step, where we take two filled rows, say row $s^{m+2}$ and $s^m$ and use that to fill row $s^m$, for all $m \\in \\{n-2, \\dots, 0\\}$. Each entry is the negative determinant of a $2 \\times 2$ matrix constructed from the entries in the previous two rows (i.e., row $s^{m+2}$ and $s^{m+1}$ when we are filling in row $s^m$) divided by the first entry in row $s^{m+1}$ (**provided that entry is not zero!**). The first column of $2 \\times 2$ matrix is the first column of the previous two rows; the second column of the $2 \\times 2$ matrix is the columns above and to the right. \n\n    <!-- TODO: Add figure -->\n\n    Note that in each row, we eventually end up with zeros at which time we stop filling the row. We repeat this procedure until we have filled all rows until row $s^0$. \n\nWe always follow the above method to fill in the Routh array, irrespective of the size of the polynomial. We illustrate this via some examples. \n\n:::{#exm-Routh-Hurwitz-1}\nFind the Routh Array of \n$$ D(s) = s^4 + 2 s^3 + 3 s^2 + 4s + 5. $$\n:::\n\n:::{.callout-note collapse=\"false\"} \n### Solution\n\nWe start by filling the first two rows\n\n\n```{=html}\n<div html-table-processing=\"none\">\n<table class=\"RouthArray\" align=\"center\">\n<tr>\n  <td>$s^4$</td>\n  <td>$1$</td>\n  <td>$3$</td>\n  <td>$5$</td>\n</tr>\n<tr>\n  <td>$s^3$</td>\n  <td>$2$</td>\n  <td>$4$</td>\n</tr>\n</table>\n</div>\n```\n\n\n\n:::\n\n### An optimization\n\nSince we only care about the signs of the coefficient, we can multiply or divide all elements in a row by a positive number without changing the result. This can sometimes lead to simpler calculations. \n\n## Interpreting the Routh Array\n\nWe start with the basic case when **there is no zero in the first column** (as is the case in @exm-Routh-Hurwitz-1). In this case, we look at the first column and count the number of sign changes (which are highlighted by arrows above). For example, for @exm-Routh-Hurwitz-1, we have two sign changes in the first column, as shown below.\n\n<!-- TODO: Add figure -->\n\nWhen there are no zeros in the first column, the polynomial has no roots on the $j ω$-axis. Moreover, \n\n- No. of roots in the ORHP = no. of sign changes\n- No. of roots in the OLHP = degree of polynomial $-$ no. of sign changes.\n\nSo, for @exm-Routh-Hurwitz-1, we have \n\n- No. of roots in the ORHP = 2 (no. of sign changes)\n- No. of roots in the OLPH = 4 (degree of polynomial) $-$ 2 (no. of sign changes) = 2. \n\nWe can verify this by factorizing $D(s)$, which gives\n\n::: {#7f6e6b28 .cell execution_count=3}\n``` {.julia .cell-code}\nD = Polynomial([5,4,3,2,1], :s)\nprintln(\"D(s) = \", D)\nroots(D)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nD(s) = 5 + 4*s + 3*s^2 + 2*s^3 + s^4\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\n4-element Vector{ComplexF64}:\n -1.2878154795576484 - 0.8578967583284913im\n -1.2878154795576484 + 0.8578967583284913im\n  0.2878154795576478 - 1.416093080171908im\n  0.2878154795576478 + 1.416093080171908im\n```\n:::\n:::\n\n\n:::{#exm-Routh-Hurwitz-2}\nFind the location of the poles of a TF with with denominator given by\n$$ D(s) = s^4 + 5 s^3 + s^2 + 10s + 1. $$\n:::\n\n:::{.callout-note collapse=\"true\"} \n### Solution\n\nTo be written\n\n:::\n\n:::{#exm-Routh-Hurwitz-3}\nFind the location of the poles of a TF with with denominator given by\n$$ D(s) = s^6 + 4s^5 + 3s^4 + 2s^3 + s^2 + 4s + 4. $$\n:::\n\n:::{.callout-note collapse=\"true\"} \n### Solution\n\nTo be written\n\n:::\n\n\n\n## Special cases: Zero in the first column\n\nWe cannot follow the usual method to construct the Routh array if there is zero in the first column. For example, consider\n$$ D(s) = s^5 + 2s^4 + 3s^3 + 6s^2 + 5s + 3. $$\n\n<!-- TODO: Show the RA until zero --> \n\nIf the entire row is not zero, then we proceed as follows\n\n- Replace the zero in the first column by an $ε$ and continue to construct the Routh array as a function of $ε$. \n- Count the number of sign changes as $ε \\to 0^{+}$ ($ε$ goes to zero from above). Let this number be $k_{+}$. \n- Count the number of sign changes as $ε \\to 0^{-}$ ($ε$ goes to zero from below). Let this number be $k_{-}$. \n\nThen, we have\n\n- No. of roots in the ORHP = $\\min\\{k_{+}, k_{-}\\}$\n- No. of roots on the $j ω$-axis = $|k_{+} - k_{-}|$. \n- No. of roots in the OLHP = $\\text{degree of polynomial} - \\max\\{k_{+}, k_{-}\\}$. \n\n### Reciprocal polynomial\n\nIf we get a zero in the first column, we can follow another method but this method is not guaranteed to work. To understand this, we need the notion of a **reciprocal polynomial**: for a polynomial $D(s)$ of degree $n$, the reciprocal polynomial is $s^n D(\\frac 1s)$. \n\n## Special cases: Entire row of zeros\n\n## Stability in state space\n\n",
    "supporting": [
      "routh-hurwitz_files"
    ],
    "filters": [],
    "includes": {}
  }
}